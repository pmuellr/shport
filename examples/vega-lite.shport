# using vega-lite with shport

from [Vega-Lite â€“ A Grammar of Interactive Graphics](https://vega.github.io/vega-lite/)

<script data-type="shnort-variable">
  function topic_view(Inputs) {
    return Inputs.radio(
      ['precipitation', 'temp_max', 'temp_min'], 
      { value: 'precipitation', label: "Topic" }
    )
  }  
</script>

<div data-type="shnort-markdown" data-requires="topic"> 
  chart for {{topic}}
</div>

<script data-type="shnort-variable">
  /** @type { (vegaLiteSpec: ReturnType<VegaLiteSpec>) => HTMLElement } */
  function chartSeattleWeather(vegaLiteSpec) {
    return vegaEmbed.container(vegaLiteSpec)
  }
</script>

------------------------------------------------------------------------

## vega lite spec

<script data-type="shnort-variable">
  /** @typedef { (seattleWeather: any, topic: string) => Record<string, any> } VegaLiteSpec */
  /** @type { VegaLiteSpec } */
  function vegaLiteSpec(seattleWeather, topic) {
    return {
      title: `${topic} in Seattle`,
      data: { values: seattleWeather },
      mark: 'bar',
      encoding: {
        x: { timeUnit: 'month', field: 'date', type: 'ordinal' },
        y: { aggregate: 'mean', field: topic },
      }
    }
  }
</script>

## all data available

<script data-type="shnort-variable">
  async function data(require) { return await require('vega-datasets@1') }
</script>

## seattle-weather.csv as an object

<script data-type="shnort-variable">
  function seattleWeather(data) { return data['seattle-weather.csv']() }
</script>
  
## first few rows of seattle-weather.csv as a table

<script data-type="shnort-variable">
  function tableSeattleWeather(Inputs, seattleWeather) {
    return Inputs.table(seattleWeather.slice(0, 5))
  }
</script>
  
------------------------------------------------------------------------

_[view current source](${import.meta.url})_
